# 1 "vsl.f90"
! This program just generates a given scalar field in order to check the
! routines of superlayer analysis
      PROGRAM VSL

      IMPLICIT NONE

# 1 "../../../include/types.h" 1 












# 50


# 54


# 162
































		   




































			   






               	           
































# 8 "../vsl.f90" 2 
# 1 "../../../include/common.h" 1 



INTEGER(4) TOTAL_VARS_MAX
PARAMETER (TOTAL_VARS_MAX=50)
INTEGER(4) NSP_MAX
PARAMETER (NSP_MAX=10)
INTEGER(4) NPROF_MAX
PARAMETER (NPROF_MAX=5)
INTEGER(4) NJET_MAX
PARAMETER (NJET_MAX=5)

! ###################################################################
! General options
! ###################################################################
COMMON /gl_main_i/&
     isim_mode, iflow_mode, icoor_mode, icalc_flow, icalc_scalar, ieqns_mode,&
     iconvective, iviscous, idiffusion, ipoisson, iord, isord
INTEGER(4) &
     isim_mode, iflow_mode, icoor_mode, icalc_flow, icalc_scalar, ieqns_mode,&
     iconvective, iviscous, idiffusion, ipoisson, iord, isord

COMMON /gl_main_f/&
    dt, rtime, timev, rtmax, cfl
REAL(8) &
    dt, rtime, timev, rtmax, cfl

COMMON /gl_logs_f/ logs_data
REAL(8) logs_data(20)

! ###########################################################
! Statistics
! ###########################################################
COMMON /gl_stat_i/&
    fstavg, fstsp, fstcorr, fstpdf, finter,&
    ffltdmp, ivort_subdom, ivort_rmax, ivort_tmax
INTEGER(4) &
    fstavg, fstsp, fstcorr, fstpdf, finter,&
    ffltdmp, ivort_subdom, ivort_rmax, ivort_tmax

INTEGER(4) ISTATMAX
PARAMETER (ISTATMAX=100)
COMMON /gl_statspatial_i/&
    nstatavg, statavg, nstatavg_points, &
    istattimeorg, nstatlin, statlin_i, statlin_j,&
    nstatpln, statpln, nstatplnextra, nstatplnvars,&
    MXMEAN_SPA, iupdate_stat, istat_min_ver, istat_maj_ver
INTEGER(4) &
    nstatavg, statavg(ISTATMAX), nstatavg_points, &
    istattimeorg, nstatlin, statlin_i(ISTATMAX), statlin_j(ISTATMAX), &
    nstatpln, statpln(ISTATMAX), nstatplnextra, nstatplnvars, &
    MXMEAN_SPA, iupdate_stat, istat_min_ver, istat_maj_ver
COMMON /gl_statspatial_f/&
    rstattimeorg
REAL(8) &
    rstattimeorg

! ###########################################################
! Iteration
! ###########################################################
COMMON /gl_itera_i/&
    itfirst, itend, nrest, navg, itime, ffirststat, nitera_log,&
    frunstat, frunline, frunplane, nspa_rest, nspa_step
INTEGER(4) &
    itfirst, itend, nrest, navg, itime, ffirststat, nitera_log,&
    frunstat, frunline, frunplane, nspa_rest, nspa_step

! ###########################################################
! Filters
! ###########################################################
COMMON /gl_filter_i/&
    ifilt_domain, ifilt_step, ifilt_scalar, ifilt_x, ifilt_y, ifilt_z
INTEGER(4) &
    ifilt_domain, ifilt_step, ifilt_scalar, ifilt_x, ifilt_y, ifilt_z

COMMON /gl_filter_r/&
    falpha
REAL(8) &
    falpha

COMMON /gl_inflflt_i/&
    ifilt_inflow, ifilt_inflow_iwidth, ifilt_inflow_jwidth, ifilt_inflow_step
INTEGER(4) &
    ifilt_inflow, ifilt_inflow_iwidth, ifilt_inflow_jwidth, ifilt_inflow_step

! ###################################################################
! Variable viscosity
! ###################################################################
COMMON /gl_vis_f/&
    vistime, viscstart, viscstop, vislaw
REAL(8) &
    vistime, viscstart, viscstop, vislaw
COMMON /gl_vis_i/&
    ivischg, ivislaw
INTEGER(4) &
    ivischg, ivislaw

! ###################################################################
! Geometry
! ###################################################################
! -------------------------------------------------------------------
! Flow
! -------------------------------------------------------------------
INTEGER(4)&
    iprof_u, iprof_rho, iprof_tem
COMMON /gl_flow_i/&
    iprof_u, iprof_rho, iprof_tem
REAL(8) &
    mean_u,   delta_u,   thick_u,   ycoor_u,   prof_u(NPROF_MAX),   diam_u,   jet_u(NJET_MAX), &
    mean_rho, delta_rho, thick_rho, ycoor_rho, prof_rho(NPROF_MAX), diam_rho, jet_rho(NJET_MAX),&
    mean_tem, delta_tem, thick_tem, ycoor_tem, prof_tem(NPROF_MAX), diam_tem, jet_tem(NJET_MAX),&
    p_init,  mean_v, mean_w
COMMON /gl_flow_f/&
    mean_u,   delta_u,   thick_u,   ycoor_u,   prof_u,   diam_u,   jet_u,&
    mean_rho, delta_rho, thick_rho, ycoor_rho, prof_rho, diam_rho, jet_rho,&
    mean_tem, delta_tem, thick_tem, ycoor_tem, prof_tem, diam_tem, jet_tem,&
    p_init, mean_v, mean_w

! -------------------------------------------------------------------
! Scalar
! -------------------------------------------------------------------
INTEGER(4) &
    iprof_z
COMMON /gl_scal_i/&
    iprof_z
REAL(8) &
    mean_z, delta_z, thick_z, ycoor_z, prof_z(NPROF_MAX), diam_z, jet_z(NJET_MAX)
COMMON /gl_scal_f/&
    mean_z, delta_z, thick_z, ycoor_z, prof_z, diam_z, jet_z

! -------------------------------------------------------------------
! Multispecies
! -------------------------------------------------------------------
INTEGER(4) imixt_type, iprof_i(NSP_MAX)
COMMON /multisp1/ imixt_type, iprof_i

REAL(8) mean_i(NSP_MAX), delta_i(NSP_MAX)
REAL(8) thick_i(NSP_MAX), ycoor_i(NSP_MAX), diam_i(NSP_MAX),&
     prof_i(NPROF_MAX,NSP_MAX), jet_i(NJET_MAX,NSP_MAX)
COMMON /multisp2/ &
     mean_i, delta_i, thick_i, ycoor_i, prof_i, diam_i, jet_i

! -------------------------------------------------------------------
! Lengths
! -------------------------------------------------------------------
COMMON /physgeom/ &
     scalex, scaley, scalez, area, volume, scalex_inf, scaley_inf, scalez_inf, area_inf
REAL(8)  &
     scalex, scaley, scalez, area, volume, scalex_inf, scaley_inf, scalez_inf, area_inf

! -------------------------------------------------------------------
! Pilot
! -------------------------------------------------------------------
COMMON /rjet_pilot/&
     rjet_pilot_thickness, rjet_pilot_maxtratio, rjet_pilot_velocity
REAL(8) &
     rjet_pilot_thickness, rjet_pilot_maxtratio, rjet_pilot_velocity
COMMON /ijet_pilot/ ijet_pilot
INTEGER(4) ijet_pilot

! -------------------------------------------------------------------
! Body force
! -------------------------------------------------------------------
COMMON /rgravity/ bdf_g, bdf_param
REAL(8) bdf_g(3), bdf_param(NPROF_MAX)
COMMON /igravity/ ibdfrc
INTEGER(4) ibdfrc

! ###################################################################
! Control
! ###################################################################
COMMON /gl_control_i/&
    ilimit_flow, ilimit_scal
INTEGER(4) &
    ilimit_flow, ilimit_scal

COMMON /gl_control_f/&
    p_bound_min, p_bound_max, r_bound_min, r_bound_max, z_bound_min, z_bound_max
REAL(8) &
    p_bound_min, p_bound_max, r_bound_min, r_bound_max, z_bound_min, z_bound_max

! ###########################################################
COMMON /terms/&
     phicoe,viscoe,condcoe,convcoe,presscoe,diffcoe,cecoeff,mwcoeff
REAL(8) &
     phicoe,viscoe,condcoe,convcoe,presscoe,diffcoe,cecoeff,mwcoeff

! ###################################################################
! Nondimensional numbers
! ###################################################################
COMMON /nolds/&
     visc, reynolds, gama0, prandtl, schmidt, mach, damkohler, froude, schmidt_min
REAL(8) &
     visc, reynolds, gama0, prandtl, schmidt(NSP_MAX), mach, damkohler, froude, schmidt_min

! ###################################################################
! Arrays size
! ###################################################################
COMMON /sizes/&
    imax, jmax, kmax, ijkmax, ijmax, kmax_total, TOTAL_VARS, n_txc_size, &
    inb_flowvars, inb_flowvars_array, inb_scalars, inb_scalars_array
INTEGER(4) &
    imax, jmax, kmax, ijkmax, ijmax, kmax_total, TOTAL_VARS, n_txc_size, &
    inb_flowvars, inb_flowvars_array, inb_scalars, inb_scalars_array
COMMON /sizes_inflow/ &
    imax_inf, jmax_inf, kmax_inf, ijkmax_inf, ijmax_inf
INTEGER(4) &
    imax_inf, jmax_inf, kmax_inf, ijkmax_inf, ijmax_inf

! ###################################################################
! Grid
! ###################################################################
COMMON /grid/&
    iunifx, iunify, iunifz
INTEGER(4) &
    iunifx, iunify, iunifz

! ###################################################################
! Forcing
! ###################################################################
COMMON /gl_forcing_i/&
    ifrc_mode, ifrcdsc_mode, ifrc_ifield
INTEGER(4) &
    ifrc_mode, ifrcdsc_mode, ifrc_ifield
COMMON /gl_forcing_f/&
    scalex_dscfrc, delta_dscfrc, frc_adapt
REAL(8) &
    scalex_dscfrc, delta_dscfrc, frc_adapt

INTEGER(4) NVWMAX
PARAMETER(NVWMAX=32)
COMMON /gl_discfrc_i/ nx2d, nx3d, nz3d
INTEGER(4) nx2d, nx3d, nz3d
COMMON /gl_discfrc_r/ Phix2d, Phix3d, Phiz3d, A2D, A3D
REAL(8) Phix2d(NVWMAX),Phix3d(NVWMAX),Phiz3d(NVWMAX), A2D(NVWMAX), A3D(NVWMAX)

! ###################################################################
! Boundary conditions
! ###################################################################
COMMON /gl_bc_i/&
    i1bc, imxbc, j1bc, jmxbc, k1bc, kmxbc,&
    i1vscbc, j1vscbc, k1vscbc, imxvscbc, jmxvscbc, kmxvscbc, nplout
INTEGER(4) &
    i1bc, imxbc, j1bc, jmxbc, k1bc, kmxbc, &
    i1vscbc, j1vscbc, k1vscbc, imxvscbc, jmxvscbc, kmxvscbc, nplout
COMMON /gl_bc_f/&
    sigmapl_out, sigmapl_infi1, sigmapl_infimx, sigmapl_infj, sigmapl_trans, &
    p_pli1, p_plimx, p_plj1, p_pljmx, p_plk1, p_plkmx
REAL(8) &
    sigmapl_out, sigmapl_infi1, sigmapl_infimx, sigmapl_infj, sigmapl_trans, &
    p_pli1, p_plimx, p_plj1, p_pljmx, p_plk1, p_plkmx

! ################################################################
! Buffer zone
! ################################################################
COMMON /gl_buffer_i/&
     ibuffer_use, ibuffer_npy, ibuffer_npx1, &
     ibuffer_npxmx, ibuffer_ht, ibuffer_hb, ibuffer_vo, &
     ibuffer_vi, ibuffer_hard, ibuffer_npy_p, ibuffer_ht_p,&
     ibuffer_hb_p, ibuffer_npy_max, iload_buffer, ibuffer_v_free
INTEGER(4) &
     ibuffer_use, ibuffer_npx1, ibuffer_npxmx, ibuffer_npy,&
     ibuffer_ht, ibuffer_hb, ibuffer_vo, ibuffer_vi,&
     ibuffer_hard(TOTAL_VARS_MAX), ibuffer_npy_p, &
     ibuffer_ht_p, ibuffer_hb_p, ibuffer_npy_max, &
     iload_buffer, ibuffer_v_free

COMMON /gl_buffer_r/&
     rbuffer_sigma, rbuffer_beta, rbuffer_hard
REAL(8) &
     rbuffer_sigma, rbuffer_beta, rbuffer_hard(TOTAL_VARS_MAX,2)

! ################################################################
! Thermo & Chemistry
! ################################################################
INTEGER(4) NCHEMKIN
PARAMETER (NCHEMKIN=7)
INTEGER(4) NR
PARAMETER (NR=1)
COMMON /nchem/WGHT, WGHT_INV, NUP, NUPP, YMASS, YMASSP, CST, CHW_CE,&
     NU, XIST, YOX, YFUEL, dsmooth, TGFM, HOX, &
     HFUEL, MRATIO, GRATIO, CPW, WMEAN, CHW_RCOI,&
     CH_F, CH_G, CH_H, CHW_ETA0, CHW_ETA1, CHW_LN0, &
     CHW_LN1, CHW_DHALF, CHW_T, CHW_CP, CHW_ETA,&
     CHW_HETA, CHW_HI, CHW_CPTOTAL, WREF, RGAS, &
     CHW_ERROR, CHW_INC, TREF
REAL(8) MRATIO, GRATIO, CPW, WMEAN, WREF, RGAS, CHW_RCOI
REAL(8) CH_F, CH_G, CH_H, CHW_CE, CHW_ERROR, CHW_INC
REAL(8) CHW_ETA0, CHW_ETA1, CHW_LN0, CHW_LN1, CHW_DHALF
REAL(8) CHW_T, CHW_CP, CHW_ETA, CHW_HETA, CHW_HI, CHW_CPTOTAL
REAL(8) WGHT(NSP_MAX), WGHT_INV(NSP_MAX), CST(NSP_MAX)
REAL(8) YMASSP(NSP_MAX), YMASS(NSP_MAX)
REAL(8) NUP(NSP_MAX,NR), NUPP(NSP_MAX,NR)
REAL(8) NU, XIST, YOX, YFUEL, dsmooth, TGFM, HOX, HFUEL, TREF
COMMON /nchem2/THERMO_AI, THERMO_TLIM, TFLAME
REAL(8) THERMO_AI(NCHEMKIN,2,NSP_MAX), THERMO_TLIM(3,NSP_MAX)
REAL(8) TFLAME
COMMON /ichem/ractive, NCP_CHEMKIN, iuse_chemkin, THERMO_FLAG, &
     NSP, imech_type, ichem_config, ISPREF, ichem_normalized
INTEGER(4) ractive, NCP_CHEMKIN, iuse_chemkin, ISPREF,&
     THERMO_FLAG(NSP_MAX), NSP, imech_type, ichem_config,&
     ichem_normalized
COMMON /schem/chemkin_file, mech_file, trsp_file, THERMO_SPNAME,&
     flame_ini_file
CHARACTER*128 chemkin_file
CHARACTER*128 mech_file
CHARACTER*128 trsp_file
CHARACTER*16 THERMO_SPNAME(NSP_MAX)
CHARACTER*32 flame_ini_file
INTEGER(4) REAC_MAX
PARAMETER (REAC_MAX=100)
COMMON /mechanism/mech_pre, mech_beta, mech_tac, mech_order
COMMON /imechanism/NMECH, NSP_THERMO, rate_type, mech_number, &
     THERMO_DATA
REAL(8) mech_pre(REAC_MAX)
REAL(8) mech_beta(REAC_MAX)
REAL(8) mech_tac(REAC_MAX)
REAL(8) mech_order(REAC_MAX)
INTEGER(4) mech_number(REAC_MAX), rate_type(REAC_MAX)
INTEGER(4) NMECH, NSP_THERMO, THERMO_DATA(REAC_MAX)

INTEGER(4) NPSAT_MAX
PARAMETER(NPSAT_MAX=10)
COMMON /c_psat_f/THERMO_PSAT, NEWTONRAPHSON_ERROR
REAL(8) THERMO_PSAT(NPSAT_MAX), NEWTONRAPHSON_ERROR
COMMON /c_psat_i/NPSAT
INTEGER(4) NPSAT

! #################################################################
! # Vortices Variables
! #################################################################

INTEGER(4) MAX_VORT_NUMBER
PARAMETER (MAX_VORT_NUMBER=32)
INTEGER(4) MAX_VORT_PARAM
PARAMETER (MAX_VORT_PARAM=14)

COMMON /ivort/ivort_type, ivort_number, ivort_ctr_auto
INTEGER(4) ivort_type, ivort_number, ivort_ctr_auto

COMMON /rvort/vort_param, vort_loc
REAL(8) vort_param(MAX_VORT_PARAM,MAX_VORT_NUMBER)
REAL(8) vort_loc(3,MAX_VORT_NUMBER)

! #################################################################
! #  Output Data
! #################################################################
INTEGER(4) IOUTMAX
PARAMETER (IOUTMAX=100)
COMMON /ioutput1/&
     ioutput_plane, npln_step, npln_i, npln_j, npln_k, pln_i, pln_j, pln_k
INTEGER(4) ioutput_plane, npln_step, npln_i, npln_j, npln_k
INTEGER(4) pln_i(IOUTMAX), pln_j(IOUTMAX), pln_k(IOUTMAX)

# 357

# 1 "../../../include/vaux.h" 1 



! ###################################################################
# 8

INTEGER(4) vindex_size
PARAMETER (vindex_size=19)


COMMON /cvaux/ vaux_size, vindex, vsize
INTEGER(4) vaux_size
INTEGER(4) vindex(vindex_size)
INTEGER(4) vsize(vindex_size)

! ###################################################################
INTEGER VA_FLT_CX, VA_FLT_CY, VA_FLT_CZ
PARAMETER (VA_FLT_CX=1)
PARAMETER (VA_FLT_CY=2)
PARAMETER (VA_FLT_CZ=3)
INTEGER VA_BUFF_HT, VA_BUFF_HB, VA_BUFF_VO, VA_BUFF_VI
PARAMETER (VA_BUFF_HT=4)
PARAMETER (VA_BUFF_HB=5)
PARAMETER (VA_BUFF_VI=6)
PARAMETER (VA_BUFF_VO=7)
INTEGER VA_BCS_HT, VA_BCS_HB, VA_BCS_VO, VA_BCS_VI
PARAMETER (VA_BCS_HT=8)
PARAMETER (VA_BCS_HB=9)
PARAMETER (VA_BCS_VI=10)
PARAMETER (VA_BCS_VO=11)

INTEGER VA_MEAN_WRK
PARAMETER (VA_MEAN_WRK=12)
INTEGER VA_LINE_SPA_WRK
PARAMETER (VA_LINE_SPA_WRK=13)
INTEGER VA_TIMES
PARAMETER (VA_TIMES=14)
INTEGER VA_PLANE_SPA_WRK
PARAMETER (VA_PLANE_SPA_WRK=15)

INTEGER VA_CYL_THETA, VA_CYL_DTHETA, VA_CYL_R, VA_CYL_DR
PARAMETER (VA_CYL_THETA=16)
PARAMETER (VA_CYL_DTHETA=17)
PARAMETER (VA_CYL_R=18)
PARAMETER (VA_CYL_DR=19)

! ###################################################################
# 79



# 360 "../../../include/common.h" 2 
# 362



# 9 "../vsl.f90" 2 
# 1 "../../../include/integers.h" 1 



       INTEGER(4) i0, i1, i2, i3, i4, i5, i6, i7 ,i8, i9
       PARAMETER(i0=0)
       PARAMETER(i1=1)
       PARAMETER(i2=2)
       PARAMETER(i3=3)
       PARAMETER(i4=4)
       PARAMETER(i5=5)
       PARAMETER(i6=6)
       PARAMETER(i7=7)
       PARAMETER(i8=8)
       PARAMETER(i9=9)
       INTEGER(4) i10, i11, i12, i13, i14, i15, i16, i17 ,i18, i19
       PARAMETER(i10=10)
       PARAMETER(i11=11)
       PARAMETER(i12=12)
       PARAMETER(i13=13)
       PARAMETER(i14=14)
       PARAMETER(i15=15)
       PARAMETER(i16=16)
       PARAMETER(i17=17)
       PARAMETER(i18=18)
       PARAMETER(i19=19)
       INTEGER(4) i20, i21, i22, i23, i24, i25, i26, i27 ,i28, i29
       PARAMETER(i20=20)
       PARAMETER(i21=21)
       PARAMETER(i22=22)
       PARAMETER(i23=23)
       PARAMETER(i24=24)
       PARAMETER(i25=25)
       PARAMETER(i26=26)
       PARAMETER(i27=27)
       PARAMETER(i28=28)
       PARAMETER(i29=29)
       INTEGER(4) i30, i31, i32, i33, i34, i35, i36, i37 ,i38, i39
       PARAMETER(i30=30)
       PARAMETER(i31=31)
       PARAMETER(i32=32)
       PARAMETER(i33=33)
       PARAMETER(i34=34)
       PARAMETER(i35=35)
       PARAMETER(i36=36)
       PARAMETER(i37=37)
       PARAMETER(i38=38)
       PARAMETER(i39=39)
       INTEGER(4) i50, i51, i52, i53, i54, i55, i56, i57 ,i58, i59
       PARAMETER(i50=50)
       PARAMETER(i51=51)
       PARAMETER(i52=52)
       PARAMETER(i53=53)
       PARAMETER(i54=54)
       PARAMETER(i55=55)
       PARAMETER(i56=56)
       PARAMETER(i57=57)
       PARAMETER(i58=58)
       PARAMETER(i59=59)
       INTEGER(4) i150
       PARAMETER(i150=150)

# 10 "../vsl.f90" 2 

      REAL(8) x(:)
      ALLOCATABLE x
      REAL(8) y(:)
      ALLOCATABLE y
      REAL(8) z(:)
      ALLOCATABLE z
      REAL(8) z1(:,:,:)
      ALLOCATABLE z1
      REAL(8) wrk3d(:)
      ALLOCATABLE wrk3d
      
      INTEGER(4) iwrk_size, i, j, k
      REAL(8) mean, delta, thick, y_center, param, FLOW_SHEAR_TEMPORAL

! ###################################################################

      CALL DNS_INIT

      CALL DNS_READ_INI('dns.ini')

      ALLOCATE(x(imax))
      ALLOCATE(y(jmax))
      ALLOCATE(z(kmax_total))
      ALLOCATE(z1(imax,jmax,kmax))
      ALLOCATE(wrk3d(imax*jmax*kmax))

      CALL RD_GRID(imax, jmax, kmax_total, scalex, scaley, scalez, x, y, z)

! -------------------------------------------------------------------
! define the field
! -------------------------------------------------------------------
      delta = 1.0d0
      mean  = 0.5d0
      thick = 1.0d-2
      DO k = 1,kmax_total
         DO j = 1,jmax
            DO i = 1,imax
               y_center = 0.5d0 + 0.25d0*SIN(2*3.14159265358979323846d0*x(i))*SIN(2*3.14159265358979323846d0*z(k))
               z1(i,j,k) = FLOW_SHEAR_TEMPORAL(i3, thick, delta, mean, y_center, param, y(j))
            ENDDO
         ENDDO
      ENDDO

      iwrk_size = imax*jmax*kmax
      CALL DNS_WRITE_FIELDS('scalar_field', imax, jmax, kmax, kmax_total,&
           iwrk_size, i1, i1, z1, wrk3d)
      
      STOP
      END
